@page "/applies"
@attribute [Authorize(FinancingPermissions.Applies.Default)]
@using Tank.Financing.Applies
@using Tank.Financing.Localization
@using Tank.Financing.Shared
@using Microsoft.AspNetCore.Authorization
@using Microsoft.Extensions.Localization
@using Blazorise.Components
@using Volo.Abp.BlazoriseUI.Components
@using Volo.Abp.ObjectMapping
@using Volo.Abp.AspNetCore.Components.Messages
@using Volo.Abp.AspNetCore.Components.Web.Theming.Layout
@using Tank.Financing.Permissions
@inherits FinancingComponentBase
@inject IAppliesAppService AppliesAppService
@inject IUiMessageService UiMessageService
@using Tank.Financing

@using Tank.Financing


@* ************************* PAGE HEADER ************************* *@
<PageHeader Title="@L["Applies"]" BreadcrumbItems="BreadcrumbItems" Toolbar="Toolbar">

</PageHeader>

@* ************************* SEARCH ************************* *@
<Card>
    <CardBody>
        <Form id="ApplySearchForm" class="mb-3">
            <Addons>
                <Addon AddonType="AddonType.Body">
                    <TextEdit @bind-Text="@Filter.FilterText"
                              Autofocus="true"
                              Placeholder="@L["Search"]">
                    </TextEdit>
                </Addon>
                <Addon AddonType="AddonType.End">
                    <SubmitButton Form="ApplySearchForm" Clicked="GetAppliesAsync">
                        <Icon Name="IconName.Search" Class="me-1"></Icon>@L["Search"]
                    </SubmitButton>
                </Addon>
            </Addons>
        </Form>
    </CardBody>
</Card>

@* ************************* DATA GRID ************************* *@
<Card>
    <CardBody>
        <DataGrid TItem="ApplyDto"
                  Data="ApplyList"
                  ReadData="OnDataGridReadAsync"
                  TotalItems="TotalCount"
                  ShowPager="true"
                  Responsive="true"
                  PageSize="PageSize">
            <DataGridColumns>
                <DataGridEntityActionsColumn TItem="ApplyDto" @ref="@EntityActionsColumn">
                    <DisplayTemplate>
                        <EntityActions TItem="ApplyDto" EntityActionsColumn="@EntityActionsColumn">
                            <EntityAction TItem="ApplyDto"
                                          Visible="@CanEditApply"
                                          Clicked="async () => await OpenEditApplyModalAsync(context)"
                                          Text="@L["Edit"]"></EntityAction>
                            <EntityAction TItem="ApplyDto"
                                          Visible="@CanDeleteApply"
                                          Clicked="() => DeleteApplyAsync(context)"
                                          ConfirmationMessage="@(()=> L["DeleteConfirmationMessage"])"
                                          Text="@L["Delete"]"></EntityAction>
                        </EntityActions>
                    </DisplayTemplate>
                </DataGridEntityActionsColumn>
               
              <DataGridColumn TItem="ApplyDto"
                      Field="EnterpriseName"
                      Caption="@L["EnterpriseName"]">
              </DataGridColumn>

              <DataGridColumn TItem="ApplyDto"
                      Field="Organization"
                      Caption="@L["Organization"]">
              </DataGridColumn>

              <DataGridColumn TItem="ApplyDto"
                      Field="ProductName"
                      Caption="@L["ProductName"]">
              </DataGridColumn>

              <DataGridColumn TItem="ApplyDto"
                      Field="Allowance"
                      Caption="@L["Allowance"]">
              </DataGridColumn>

              <DataGridColumn TItem="ApplyDto"
                      Field="APR"
                      Caption="@L["APR"]">
              </DataGridColumn>

              <DataGridColumn TItem="ApplyDto"
                      Field="Period"
                      Caption="@L["Period"]">
              </DataGridColumn>

              <DataGridColumn TItem="ApplyDto"
                      Field="ApplyStatus"
                      Caption="@L["ApplyStatus"]">
                    <DisplayTemplate>
                        @L[$"Enum:ApplyStatus:{Convert.ToInt32(context.ApplyStatus)}"]
                    </DisplayTemplate>
              </DataGridColumn>


              <DataGridColumn TItem="ApplyDto"
                      Field="GuaranteeMethod"
                      Caption="@L["GuaranteeMethod"]">
                    <DisplayTemplate>
                        @L[$"Enum:GuaranteeMethod:{Convert.ToInt32(context.GuaranteeMethod)}"]
                    </DisplayTemplate>
              </DataGridColumn>


              <DataGridColumn TItem="ApplyDto"
                      Field="ApplyTime"
                      Caption="@L["ApplyTime"]">
              </DataGridColumn>

              <DataGridColumn TItem="ApplyDto"
                      Field="PassedTime"
                      Caption="@L["PassedTime"]">
              </DataGridColumn>

            </DataGridColumns>
        </DataGrid>
    </CardBody>
</Card>

@* ************************* CREATE MODAL ************************* *@
<Modal @ref="CreateApplyModal">
    <ModalContent Centered="true">
        <Form id="CreateApplyForm">
            <ModalHeader>
                <ModalTitle>@L["NewApply"]</ModalTitle>
                <CloseButton Clicked="CloseCreateApplyModalAsync" />
            </ModalHeader>
            <ModalBody>%%tab-header-create%%
                <Validations @ref="@NewApplyValidations"
                            Mode="ValidationMode.Auto"
                            Model="@NewApply"
                            ValidateOnLoad="false">
                     %%main-create-tab-opener%%
                    
                    <Validation>
                        <Field>
                            <FieldLabel>@L["EnterpriseName"] *</FieldLabel>
                            <TextEdit @bind-Text="@NewApply.EnterpriseName" >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>


                    <Validation>
                        <Field>
                            <FieldLabel>@L["Organization"] *</FieldLabel>
                            <TextEdit @bind-Text="@NewApply.Organization" >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>


                    <Validation>
                        <Field>
                            <FieldLabel>@L["ProductName"] *</FieldLabel>
                            <TextEdit @bind-Text="@NewApply.ProductName" >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>


                    <Validation>
                        <Field>
                            <FieldLabel>@L["Allowance"]</FieldLabel>
                            <TextEdit @bind-Text="@NewApply.Allowance" >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>


                    <Validation>
                        <Field>
                            <FieldLabel>@L["APR"]</FieldLabel>
                            <TextEdit @bind-Text="@NewApply.APR" >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>


                    <Validation>
                        <Field>
                            <FieldLabel>@L["Period"]</FieldLabel>
                            <TextEdit @bind-Text="@NewApply.Period" >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>


                    <Field>
                        <FieldLabel>@L["ApplyStatus"]</FieldLabel>
                        <Select TValue="ApplyStatus" @bind-SelectedValue="@NewApply.ApplyStatus">
                            @foreach (var itemValue in Enum.GetValues(typeof(ApplyStatus)))
                            {
                                <SelectItem TValue="ApplyStatus" Value="@((ApplyStatus) itemValue)">
                                    @L[$"Enum:ApplyStatus:{Convert.ToInt32(itemValue)}"]
                                </SelectItem>
                            }
                        </Select>
                    </Field>


                    <Field>
                        <FieldLabel>@L["GuaranteeMethod"]</FieldLabel>
                        <Select TValue="GuaranteeMethod" @bind-SelectedValue="@NewApply.GuaranteeMethod">
                            @foreach (var itemValue in Enum.GetValues(typeof(GuaranteeMethod)))
                            {
                                <SelectItem TValue="GuaranteeMethod" Value="@((GuaranteeMethod) itemValue)">
                                    @L[$"Enum:GuaranteeMethod:{Convert.ToInt32(itemValue)}"]
                                </SelectItem>
                            }
                        </Select>
                    </Field>


                    <Validation>
                        <Field>
                            <FieldLabel>@L["ApplyTime"] *</FieldLabel>
                            <NumericEdit TValue="long" @bind-Value="@NewApply.ApplyTime" >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                             </NumericEdit>
                        </Field>
                     </Validation>


                    <Validation>
                        <Field>
                            <FieldLabel>@L["PassedTime"]</FieldLabel>
                            <NumericEdit TValue="long" @bind-Value="@NewApply.PassedTime" >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                             </NumericEdit>
                        </Field>
                     </Validation>


                    %%main-tab-closer%%
                    %%razor-modal-navigation-connection-fields-new%%
                </Validations>%%tab-closer%%
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseCreateApplyModalAsync">
                    @L["Cancel"]
                </Button>
                <SubmitButton Form="CreateApplyForm" Clicked="CreateApplyAsync" />
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>

@* ************************* EDIT MODAL ************************* *@
<Modal @ref="EditApplyModal">
    <ModalContent Centered="true">
        <Form id="EditApplyForm">
            <ModalHeader>
                <ModalTitle>@L["Update"]</ModalTitle>
                <CloseButton Clicked="CloseEditApplyModalAsync" />
            </ModalHeader>
            <ModalBody>%%tab-header-edit%%
                <Validations @ref="@EditingApplyValidations"
                            Mode="ValidationMode.Auto"
                            Model="@EditingApply"
                            ValidateOnLoad="false">
                     %%main-edit-tab-opener%%
                    
                    <Validation>
                        <Field>
                            <FieldLabel>@L["EnterpriseName"] *</FieldLabel>
                            <TextEdit @bind-Text="@EditingApply.EnterpriseName" >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>


                    <Validation>
                        <Field>
                            <FieldLabel>@L["Organization"] *</FieldLabel>
                            <TextEdit @bind-Text="@EditingApply.Organization" >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>


                    <Validation>
                        <Field>
                            <FieldLabel>@L["ProductName"] *</FieldLabel>
                            <TextEdit @bind-Text="@EditingApply.ProductName" >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>


                    <Validation>
                        <Field>
                            <FieldLabel>@L["Allowance"]</FieldLabel>
                            <TextEdit @bind-Text="@EditingApply.Allowance" >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>


                    <Validation>
                        <Field>
                            <FieldLabel>@L["APR"]</FieldLabel>
                            <TextEdit @bind-Text="@EditingApply.APR" >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>


                    <Validation>
                        <Field>
                            <FieldLabel>@L["Period"]</FieldLabel>
                            <TextEdit @bind-Text="@EditingApply.Period" >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>


                    <Field>
                        <FieldLabel>@L["ApplyStatus"]</FieldLabel>
                        <Select TValue="ApplyStatus" @bind-SelectedValue="@EditingApply.ApplyStatus">
                            @foreach (var itemValue in Enum.GetValues(typeof(ApplyStatus)))
                            {
                                <SelectItem TValue="ApplyStatus" Value="@((ApplyStatus) itemValue)">
                                    @L[$"Enum:ApplyStatus:{Convert.ToInt32(itemValue)}"]
                                </SelectItem>
                            }
                        </Select>
                    </Field>


                    <Field>
                        <FieldLabel>@L["GuaranteeMethod"]</FieldLabel>
                        <Select TValue="GuaranteeMethod" @bind-SelectedValue="@EditingApply.GuaranteeMethod">
                            @foreach (var itemValue in Enum.GetValues(typeof(GuaranteeMethod)))
                            {
                                <SelectItem TValue="GuaranteeMethod" Value="@((GuaranteeMethod) itemValue)">
                                    @L[$"Enum:GuaranteeMethod:{Convert.ToInt32(itemValue)}"]
                                </SelectItem>
                            }
                        </Select>
                    </Field>


                    <Validation>
                        <Field>
                            <FieldLabel>@L["ApplyTime"] *</FieldLabel>
                            <NumericEdit TValue="long" @bind-Value="@EditingApply.ApplyTime" >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                             </NumericEdit>
                        </Field>
                     </Validation>


                    <Validation>
                        <Field>
                            <FieldLabel>@L["PassedTime"]</FieldLabel>
                            <NumericEdit TValue="long" @bind-Value="@EditingApply.PassedTime" >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                             </NumericEdit>
                        </Field>
                     </Validation>


                    %%main-tab-closer%%
                    %%razor-modal-navigation-connection-fields-editing%%
                </Validations>%%tab-closer%%
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseEditApplyModalAsync">
                    @L["Cancel"]
                </Button>
                <SubmitButton Form="CreateApplyForm" Clicked="UpdateApplyAsync" />
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>
